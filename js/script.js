(()=>{const r=(o,s,t)=>{let e;return function(){let n=this,l=arguments,a=()=>{e=null,t||o.apply(n,l)},d=t&&!e;clearTimeout(e),e=setTimeout(a,s),d&&o.apply(n,l)}},i=document.querySelector("header.header"),c=r(function(){window.scrollY?i.classList.add("scrolled"):i.classList.remove("scrolled")},50);document.addEventListener("scroll",c);c();})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovVXNlcnMvZGV2aWwvRGV2ZWxvcG1lbnQvd2Vic2l0ZXMvZGV2YWtpbWJvL2Fzc2V0cy9qcy9jb21tb24uanMiLCAianMvc2NyaXB0LmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJleHBvcnQgY29uc3QgZ2V0Q29va2llID0gbmFtZSA9PiB7XG4gIGxldCBtYXRjaGVzID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoXG4gICAgXCIoPzpefDsgKVwiICsgbmFtZS5yZXBsYWNlKC8oW1xcLiQ/Knx7fVxcKFxcKVxcW1xcXVxcXFxcXC9cXCteXSkvZywgJ1xcXFwkMScpICsgXCI9KFteO10qKVwiXG4gICkpO1xuICByZXR1cm4gbWF0Y2hlcyA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaGVzWzFdKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVDb29raWUgPSAobmFtZSwgcGF0aD1cIi9cIiwgZG9tYWluPXdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSkgPT4ge1xuICBkb2N1bWVudC5jb29raWUgPSBgJHtuYW1lfT07ZXhwaXJlcz1UaHUsIDAxIEphbiAxOTcwIDAwOjAwOjAxIEdNVDtwYXRoPSR7cGF0aH07ZG9tYWluPSR7ZG9tYWlufTtgO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlYm91bmNlID0gKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSkgPT4ge1xuICBsZXQgdGltZW91dDtcblxuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgbGV0IGNvbnRleHQgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzO1xuICAgIGxldCBsYXRlciA9ICgpID0+IHtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuXG4gICAgICBpZiAoIWltbWVkaWF0ZSkge1xuICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBsZXQgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcblxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG5cbiAgICBpZiAoY2FsbE5vdykge1xuICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICB9XG4gIH07XG59OyIsICJpbXBvcnQgeyBkZWJvdW5jZSB9IGZyb20gXCIuL2NvbW1vblwiXG4vLyBpbXBvcnQgXCIuL3N1YnNjcmlwdGlvblwiXG5cbmNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoZWFkZXIuaGVhZGVyXCIpO1xuXG5jb25zdCBzY3JvbGxIYW5kbGVyID0gZGVib3VuY2UoZnVuY3Rpb24gKCkge1xuICBpZiAod2luZG93LnNjcm9sbFkpIHtcbiAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZChcInNjcm9sbGVkXCIpO1xuXG4gIH0gZWxzZSB7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJzY3JvbGxlZFwiKTtcbiAgfVxufSwgNTApXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgc2Nyb2xsSGFuZGxlcik7XG5cbnNjcm9sbEhhbmRsZXIoKTtcblxuLy8gaWYgKEludGVyc2VjdGlvbk9ic2VydmVyKSB7XG4vLyAgIGxldCBvcHRpb25zID0ge1xuLy8gICAgIHJvb3Q6IGRvY3VtZW50LmJvZHksXG4vLyAgICAgcm9vdE1hcmdpbjogXCIwcHhcIixcbi8vICAgICB0cmVzaG9sZDogMS4wXG4vLyAgIH07XG5cbi8vICAgbGV0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzLCBvYnNlcnZlcikgPT4ge1xuLy8gICAgIGVudHJpZXMuZm9yRWFjaChlbnRyeSA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZyhlbnRyeSlcblxuLy8gICAgIH0pfSwgb3B0aW9ucyk7XG4vLyB9XG5cbi8vIChmdW5jdGlvbigpIHtcbi8vICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vICQoZnVuY3Rpb24oKSB7XG4vLyBoZWFkZXIgRml4ZWQgY2xhc3Ncbi8vIGlmICgkKFwiLmR5bmFtaWMtaGVhZGVyIC5tYWluX2hlYWRlclwiKS5sZW5ndGgpIHtcbi8vICAgJCh3aW5kb3cpLm9uKFwic2Nyb2xsXCIsIGZ1bmN0aW9uKCl7XG4vLyAgICAgdmFyIHNjcm9sbCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcbi8vICAgICBpZiAoc2Nyb2xsID49IDIpIHtcbi8vICAgICAgICQoXCIuZHluYW1pYy1oZWFkZXIgLm1haW5faGVhZGVyXCIpLmFkZENsYXNzKFwiZGFya19iZ1wiKTtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgJChcIi5keW5hbWljLWhlYWRlciAubWFpbl9oZWFkZXJcIikucmVtb3ZlQ2xhc3MoXCJkYXJrX2JnXCIpO1xuLy8gICAgIH1cbi8vICAgfSk7XG4vLyB9XG5cbi8vIGhlYWRlciBNZW51IFNjcm9sbCBkb3duIGpzXG4vLyAkKHdpbmRvdykub24oXCJzY3JvbGxcIiwgZnVuY3Rpb24oKXtcbi8vICAgdmFyIHNjcm9sbFBvcyA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcbi8vICAgJCgnLm1haW5fbWVudV9saXN0IGxpIGEnKS5vbihcImVhY2hcIiwgZnVuY3Rpb24oKXtcbi8vICAgICB2YXIgY3VycmVudEVsZW1lbnQgPSAkKHRoaXMpO1xuLy8gICAgIHZhciBjdXJyZW50VG9wID0gICQoJCh0aGlzKS5hdHRyKCdocmVmJykpLm9mZnNldCgpLnRvcCAtIDgwO1xuLy8gICAgIHZhciBjdXJyZW50SGVpZ2h0ID0gJChjdXJyZW50RWxlbWVudC5hdHRyKFwiaHJlZlwiKSkub3V0ZXJIZWlnaHQoKTtcbi8vICAgICBpZiAoIGN1cnJlbnRUb3AgPD0gc2Nyb2xsUG9zICYmIChjdXJyZW50VG9wICsgY3VycmVudEhlaWdodCkgPiBzY3JvbGxQb3MgKSB7XG4vLyAgICAgICAkKGN1cnJlbnRFbGVtZW50KS5wYXJlbnQoKS5zaWJsaW5ncygpLmZpbmQoJ2EnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4vLyAgICAgICAkKGN1cnJlbnRFbGVtZW50KS5hZGRDbGFzcygnYWN0aXZlJyk7XG4vLyAgICAgfVxuLy8gICAgIGVsc2V7XG4vLyAgICAgICAkKGN1cnJlbnRFbGVtZW50KS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4vLyAgICAgfVxuLy8gICB9KTtcbi8vIH0pO1xuXG4vLyAkKCdhW2hyZWZePVwiI1wiXScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbi8vICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbi8vICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoXG4vLyAgICAge1xuLy8gICAgICAgc2Nyb2xsVG9wOiAkKCQodGhpcykuYXR0cignaHJlZicpKS5vZmZzZXQoKS50b3AgLSA3Nyxcbi8vICAgICB9LFxuLy8gICAgIDEwMDAsXG4vLyAgICAgJ2xpbmVhcidcbi8vICAgKVxuLy8gfSk7XG5cbi8vIFNjcm9sbCB1cCBqc1xuLy8gJCh3aW5kb3cpLm9uKFwic2Nyb2xsXCIsIGZ1bmN0aW9uKCl7XG4vLyAgIGlmICgkKHRoaXMpLnNjcm9sbFRvcCgpID49IDUwKSB7XG4vLyAgICAgJCgnLnNjcm9sbFVwJykuZmFkZUluKDIwMCk7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgJCgnLnNjcm9sbFVwJykuZmFkZU91dCgyMDApO1xuLy8gICB9XG4vLyB9KTtcblxuLy8gJCgnLnNjcm9sbFVwJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4vLyAgICQoJ2JvZHksaHRtbCcpLmFuaW1hdGUoe1xuLy8gICAgIHNjcm9sbFRvcCA6IDBcbi8vICAgfSwgODAwKTtcbi8vIH0pO1xuXG4vLyBMb2FkZXIgSnNcbi8vICQod2luZG93KS5vbihcImxvYWRcIiwgZnVuY3Rpb24oKXtcbi8vICAgJChcIi5sb2FkZXJcIikuZmFkZU91dChcInNsb3dcIik7XG4vLyB9KTtcblxuLy8gZ28gZG93blxuLy8gJChcIi5nb19kb3duX2Fycm93IGkuZmEsIC5zbGlkaW5nX2xpbmtcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4vLyAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbi8vICAgICBzY3JvbGxUb3A6ICQoXCIjbWFpbl9ib2R5XCIpLm9mZnNldCgpLnRvcFxuLy8gICB9LCA4MDApO1xuLy8gfSk7XG5cblxuLy8gJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuLy8gICAvLyBzY3JvbGwgRG93biBqc1xuLy8gJCgnLnNjcm9sbF9kb3duJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuLy8gICBlLnByZXZlbnREZWZhdWx0KClcbi8vICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe3Njcm9sbFRvcDogJCgnI2Fib3V0Jykub2Zmc2V0KCkudG9wIC0gNzcsIH0sJ3Nsb3cnKVxuLy8gfSk7XG5cbi8vICQoIFwiLnNsaWRpbmdfbGlua1wiICkub24oXCJjbGlja1wiLCBmdW5jdGlvbiggZXZlbnQgKXtcbi8vICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbi8vICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogJCgkKHRoaXMpLmF0dHIoXCJocmVmXCIpKS5vZmZzZXQoKS50b3AgfSwgODAwKTtcbi8vIH0pO1xuXG4vLyBwb3J0Zm9saW8gcG9wdXAganNcbi8vICQoJyNwb3J0Zm9saW9saXN0IC5wb3J0Zm9saW9faXRlbSwgI3BvcnRmb2xpb2xpc3QxIC5wb3J0Zm9saW9faXRlbSwgLmdhbGxlcnlMaXN0IC5nYWxsZXJ5X2l0ZW0nKS5tYWduaWZpY1BvcHVwKHtcbi8vICAgZGVsZWdhdGU6ICdhJyxcbi8vICAgZ2FsbGVyeToge1xuLy8gICAgIGVuYWJsZWQ6IHRydWVcbi8vICAgfSxcbi8vICAgdHlwZTogJ2ltYWdlJ1xuLy8gfSk7XG5cbi8vIC8vIHBvcnRmb2xpbyBwb3B1cCBqc1xuLy8gJCgnLmdldF9xdW90ZScpLm1hZ25pZmljUG9wdXAoe30pO1xuXG5cbi8vICQoJy5vcGVuLXBvcHVwLWxpbmsnKS5tYWduaWZpY1BvcHVwKHtcbi8vICAgdHlwZTonaW5saW5lJyxcbi8vICAgbWlkQ2xpY2s6IHRydWVcbi8vIH0pO1xuXG4vLyBtb2JpbGUgbWVudSB0b2dnbGVcbi8vICQoXCIubWVudS1iYXJcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4vLyAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuLy8gICAkKCcubWFpbl9tZW51JykuYWRkQ2xhc3MoJ29wZW5lZCcpO1xuLy8gfSk7XG4vLyAkKFwiLmNsb3NlX21lbnUsIC5uYXYtbGlua1wiKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbi8vICAgJCgnLm1lbnUtYmFyJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuLy8gICAkKCcubWFpbl9tZW51JykucmVtb3ZlQ2xhc3MoJ29wZW5lZCcpO1xuLy8gfSk7XG4vLyB9KTtcbi8vIH0pO1xuLy8gfSkoKTtcbiJdLAogICJtYXBwaW5ncyI6ICJNQVdPLE1BQU0sRUFBVyxVQUN0QixNQUVBLE1BQU8sWUFDTCxNQUFjLE9BQWEsWUFDZixLQUNWLEVBQVUsS0FFVixBQUFLLEdBQ0gsRUFBSyxNQUFNLEVBQVMsTUFJVixHQUFhLENBQUMsRUFFNUIsYUFBYSxHQUNiLEVBQVUsV0FBVyxFQUFPLEdBRTVCLEFBQUksR0FDRixFQUFLLE1BQU0sRUFBUyxLQzNCcEIsRUFBUyxTQUFTLGNBQWMsbUJBRWhCLEVBQVMsV0FDN0IsQUFBSSxPQUFPLFFBQ1QsRUFBTyxVQUFVLElBQUksWUFHckIsRUFBTyxVQUFVLE9BQU8sYUFFekIsSUFFSCxTQUFTLGlCQUFpQixTQUFVLEdBRXBDIiwKICAibmFtZXMiOiBbXQp9Cg==
